// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.41'

    repositories {
        google()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

//        classpath 'com.mytooltest.plugin:myplugin:0.0.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {

        maven { url "https://jitpack.io" }

        google()
        jcenter()
        mavenLocal()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


//import java.util.concurrent.TimeUnit
//// Log timings per task.
//class TimingsListener implements TaskExecutionListener, BuildListener {
//    private long startTime
//    private timings = []
//
//    @Override
//    void beforeExecute(Task task) {
//        startTime = System.nanoTime()
//    }
//
//    @Override
//    void afterExecute(Task task, TaskState taskState) {
//        def ms = TimeUnit.MILLISECONDS.convert(System.nanoTime() - startTime, TimeUnit.NANOSECONDS);
//        timings.add([ms, task.path])
//        task.project.logger.warn "${task.path} took ${ms}ms"
//    }
//
//    @Override
//    void buildFinished(BuildResult result) {
//        println "Task timings:"
//        for (timing in timings) {
//            if (timing[0] >= 50) {
//                printf "%7sms  %s\n", timing
//            }
//        }
//    }
//
//    @Override
//    void buildStarted(Gradle gradle) {}
//
//    @Override
//    void projectsEvaluated(Gradle gradle) {}
//
//    @Override
//    void projectsLoaded(Gradle gradle) {}
//
//    @Override
//    void settingsEvaluated(Settings settings) {}
//}
//
//gradle.addListener new TimingsListener()
